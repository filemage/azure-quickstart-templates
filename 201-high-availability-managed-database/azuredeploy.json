{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminAccessIp": {
      "type": "string",
      "metadata": {
        "description": "The IP address of your workstation or office network. Used to allow administrator access to the managed database."
      }
    },
    "dbSku": {
      "type": "string",
      "defaultValue": "GP_Gen5_2",
      "metadata": {
        "description": "The SKU of the managed database. Must be General Purpose or Memory Optimized to support firewall rules."
      }
    },
    "appSku": {
      "type": "string",
      "defaultValue": "Standard_DS1_v2",
      "metadata": {
        "description": "The SKU of the application virtual machines."
      }
    },
    "scaleSetCapacity": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "The number of application virtual machines to provision in the scale set."
      }
    },
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "ubuntu",
      "metadata": {
        "description": "The user name of the superuser on the managed database."
      }
    },
    "linuxAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the Linux administrator user on the application virtual machines."
      }
    },
    "dbUsername": {
      "type": "string",
      "defaultValue": "filemage",
      "metadata": {
        "description": "The user name of the superuser on the managed database."
      }
    },
    "dbPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the superuser on the managed database."
      }
    },
    "sessionSecret": {
      "type": "securestring",
      "defaultValue": "[uniqueString(resourceGroup().id)]",
      "metadata": {
        "description": "Random key used for encrypting cookies."
      }
    },
    "adminCidr": {
      "type": "string",
      "defaultValue": "0.0.0.0/0",
      "metadata": {
        "description": "The CIDR used to restrict SSH access."
      }
    },
    "customImageResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The full resource ID of an optional custom image to use."
      }
    }
  },
  "variables": {
    "vnetAddress": "10.0.0.0/16",
    "subnetAddress": "10.0.0.0/24",
    "vnetName": "filemage-vnet",
    "subnetName": "filemage-subet",
    "dbName": "[concat('filemage-db-', uniquestring(resourceGroup().id))]",
    "lbPublicIpName": "filemage-lb-public-ip",
    "lbName": "filemage-lb",
    "nsgName": "filemage-nsg",
    "scaleSetName": "filemage-vms",
    "lbFrontendName": "ipv4-frontend",
    "poolName": "ipv4-address-pool",
    "httpsProbeName": "https-probe",
    "sftpProbeName": "sftp-probe",
    "ftpProbeName": "ftp-probe",
    "lbDns": "[concat('filemage-', uniquestring(resourceGroup().id))]",
    "lbId": "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
    "frontendId": "[concat(variables('lbId'), '/frontendIPConfigurations/', variables('lbFrontendName'))]",
    "lbPublicIpId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbPublicIpName'))]",
    "poolId": "[concat(variables('lbId'), '/backendAddressPools/', variables('poolName'))]",
    "nsgId": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
    "subnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]",
    "httpsProbeId": "[concat(variables('lbId'),'/probes/', variables('httpsProbeName'))]",
    "sftpProbeId": "[concat(variables('lbId'),'/probes/', variables('sftpProbeName'))]",
    "ftpProbeId": "[concat(variables('lbId'),'/probes/', variables('ftpProbeName'))]",
    "scriptLocation": "https://raw.githubusercontent.com/filemage/azure-quickstart-templates/master/201-high-availability-managed-database/files/initialize-application.sh",
    "hostKeyLocation": "https://raw.githubusercontent.com/filemage/azure-quickstart-templates/master/201-high-availability-managed-database/files/ssh_host_rsa_key",
    "location": "[resourceGroup().location]",
    "defaultImageReference": {
      "publisher": "filemagellc",
      "offer": "filemage-gateway-vm",
      "sku": "filemage-gateway-vm-003",
      "version": "latest"
    },
    "customImageReference": {
      "id": "[parameters('customImageResourceId')]"
    }
  },
  "resources": [
    {
      "apiVersion": "2020-04-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddress')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetAddress')]",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.Sql"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-12-01",
      "type": "Microsoft.DBforPostgreSQL/servers",
      "name": "[variables('dbName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "[parameters('dbSku')]"
      },
      "properties": {
        "version": "11",
        "sslEnforcement": "Enabled",
        "storageProfile": {
          "backupRetentionDays": 7,
          "geoRedundantBackup": "Disabled",
          "storageMB": 5120,
          "storageAutogrow": "Enabled"
        },
        "createMode": "Default",
        "administratorLogin": "[parameters('dbUsername')]",
        "administratorLoginPassword": "[parameters('dbPassword')]"
      },
      "resources": [
        {
          "name": "vnetRule",
          "type": "virtualNetworkRules",
          "apiVersion": "2017-12-01",
          "properties": {
            "virtualNetworkSubnetId": "[variables('subnetId')]",
            "ignoreMissingVnetServiceEndpoint": true
          },
          "dependsOn": [
            "[concat('Microsoft.DBforPostgreSQL/servers/', variables('dbName'))]"
          ]
        },
        {
          "name": "filemage",
          "type": "databases",
          "apiVersion": "2017-12-01",
          "properties": {
            "charset": "UTF8",
            "collation": "C"
          },
          "dependsOn": [
            "[concat('Microsoft.DBforPostgreSQL/servers/', variables('dbName'))]"
          ]
        },
        {
          "name": "adminFirewall",
          "type": "firewallRules",
          "apiVersion": "2017-12-01",
          "properties": {
            "startIpAddress": "[parameters('adminAccessIp')]",
            "endIpAddress": "[parameters('adminAccessIp')]"
          },
          "dependsOn": [
            "[concat('Microsoft.DBforPostgreSQL/servers/', variables('dbName'))]"
          ]
        }
      ]
    },
    {
      "apiVersion": "2019-09-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('lbPublicIpName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "dynamic",
        "publicIPAddressVersion": "IPv4",
        "dnsSettings": {
          "domainNameLabel": "[variables('lbDns')]"
        }
      }
    },
    {
      "name": "[variables('lbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "dependsOn": [
        "[variables('lbPublicIpId')]"
      ],
      "apiVersion": "2019-09-01",
      "location": "[variables('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lbFrontendName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('lbPublicIpId')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('poolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "sftp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontendId')]"
              },
              "backendAddressPool": {
                "id": "[variables('poolId')]"
              },
              "protocol": "Tcp",
              "frontendPort": 22,
              "backendPort": 2222,
              "probe": {
                "id": "[variables('sftpProbeId')]"
              }
            }
          },
          {
            "name": "ftp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontendId')]"
              },
              "backendAddressPool": {
                "id": "[variables('poolId')]"
              },
              "protocol": "Tcp",
              "frontendPort": 21,
              "backendPort": 21,
              "probe": {
                "id": "[variables('ftpProbeId')]"
              }
            }
          },
          {
            "name": "http",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontendId')]"
              },
              "backendAddressPool": {
                "id": "[variables('poolId')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80
            }
          },
          {
            "name": "https",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontendId')]"
              },
              "backendAddressPool": {
                "id": "[variables('poolId')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "probe": {
                "id": "[variables('httpsProbeId')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('httpsProbeName')]",
            "properties": {
              "protocol": "Tcp",
              "port": 443,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          },
          {
            "name": "[variables('sftpProbeName')]",
            "properties": {
              "protocol": "Tcp",
              "port": 2222,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          },
          {
            "name": "[variables('ftpProbeName')]",
            "properties": {
              "protocol": "Tcp",
              "port": 21,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "name": "[variables('scaleSetName')]",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2019-12-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[variables('nsgId')]",
        "[variables('lbId')]"
      ],
      "sku": {
        "name": "[parameters('appSku')]",
        "capacity": "[parameters('scaleSetCapacity')]"
      },
      "plan": {
        "name": "filemage-gateway-vm-003",
        "publisher": "filemagellc",
        "product": "filemage-gateway-vm"
      },
      "properties": {
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "osProfile": {
            "computerNamePrefix": "filemage",
            "adminUsername": "[parameters('linuxAdminUsername')]",
            "adminPassword": "[parameters('linuxAdminPassword')]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": false
            }
          },
          "storageProfile": {
            "imageReference": "[if(equals(parameters('customImageResourceId'),''), variables('defaultImageReference'), variables('customImageReference'))]",
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "primary-nic",
                "properties": {
                  "primary": true,
                  "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                  },
                  "ipConfigurations": [
                    {
                      "name": "nic-ipv4",
                      "properties": {
                        "subnet": {
                          "id": "[variables('subnetId')]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[variables('poolId')]"
                          }
                        ],
                        "publicIPAddressConfiguration": {
                          "name": "public-ipv4"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "init",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": [
                      "[variables('scriptLocation')]",
                      "[variables('hostKeyLocation')]"
                    ]
                  },
                  "protectedSettings": {
                    "commandToExecute": "[concat('./initialize-application.sh', ' ', reference(variables('dbname')).fullyQualifiedDomainName, ' ', parameters('dbUsername'), ' ', variables('dbName'), ' ', parameters('dbPassword'), ' ', parameters('sessionSecret'))]"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "name": "[variables('nsgName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2018-04-01",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "priority": 100,
              "sourceAddressPrefix": "[parameters('adminCidr')]",
              "protocol": "Tcp",
              "destinationPortRange": "22",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "sftp",
            "properties": {
              "priority": 200,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "2222",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "ftp",
            "properties": {
              "priority": 300,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "21",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "ftp-passive",
            "properties": {
              "priority": 400,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "32768-60999",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "http",
            "properties": {
              "priority": 500,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "80",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "https",
            "properties": {
              "priority": 600,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "443",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "databaseFqdn": {
      "type": "string",
      "value": "[reference(variables('dbname')).fullyQualifiedDomainName]"
    },
    "loadBalancerFqdn": {
      "type": "string",
      "value": "[reference(variables('lbPublicIpId')).dnsSettings.fqdn]"
    }
  }
}
